Effective Java 第三版



第２章　オブジェクトの生成と消滅

項目２　多くのコンストラクタパラメータに直面した時にはビルダーパターンを検討する。

要旨　
staticファクトリーメソッドとコンストラクタの共通的な制約は、多くのオプションパラメータに対してはうまく対応できないというものです。
この制約に対して、テレスコーピング・コンストラクタパーターンや、JavaBeansパターンを使い対応することが可能です。
しかし、上記の2つのパターンでは、必要のないパラメータの設定を強制されたり、コードの作成、可読性、保守性が低下します。
上記の問題を回避するための方法として、Builderパターンがあります。
結論として、コンストラクタやStaticファクトリーメソッドが多くのパラメータを持つクラスを設計する場合には、Builderパターンはよい選択です。
